---
layout: "post"
title:  "Jekyll基本语法"
date:   "2023-12-04 00:00:00 +0800"
categories: [jekyll]
tags: [jekyll]
---


> **英文官网** [jekyllrb.com](https://jekyllrb.com/)  
> **中文操作指南** [www.jekyll.com.cn](https://www.jekyll.com.cn/docs/#%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97)

## Front Matter 文件头部元信息

Front Matter 是放置在文件开头的两条三虚线之间的`YAML`片段。

举例：

```
---
layout: post
title:  "Jekyll语法学习"
date:   2023-12-03 00:00:00 +0800
categories: [jekyll,update]
tags: [jekyll,update]
permalink: /2023/12/03/jekyll语法学习/
excerpt_separator: <!--more-->
---
```

- `layout` 布局文件
- `title` 标题
- `date` 时间
- `categories` 分类
- `tags` 标签
- `permalink` 自定义永久链接，覆盖默认链接格式
- `published:false` 不发布生成，*或者使用草稿方式实现*
- `excerpt_separator` 自定义摘要分隔符，默认是<!--more-->

### 使用 front Matter 来设置页面的变量,供其他地方引用

举例：

这样设置

```
---
my_number: 5
---
```

这样读取

{% raw %}
> {{ page.my_number }}

{% endraw %}

## Liquid 模板语言

* objects 变量引用，主要用来插入显示变量
* tags 逻辑控制，比如if
* filters 过滤器，改变Liquid的值，过滤或调整格式

### objects

{% raw %} 对对象使用双花括号
> {{ xxx }}

例如：显示page.title变量。

```
{{ page.title }}
```

{% endraw %}

#### 常用变量：

- `site.time` 网站生成的时间
- `site.pages` 网站中的所有页面
- `site.posts` 网站中的所有文章
- `site.related_posts` 与当前文章相关的文章
- `site.collections` 网站中的所有集合
- `page.content` 页面的内容
- `page.title` 页面的标题
- `page.excerpt` 页面的摘要
- `page.url` 页面的 URL
- `page.date` 页面的日期
- `page.id` 页面的唯一标识符
- `page.categories` 页面的分类
- `page.tags` 页面的标签
- `paginator.page` 当前页码

> #### 可引用的系统默认变量介绍-[**Variables**](https://jekyllrb.com/docs/variables/)
> - `Global Variables` 全局
> - `Site  Variables` 站点
> - `Page Variables` 页面
> - `Theme  Variables` 主题
> - `Paginator  Variables` 分页

### tags

{% raw %} 使用大括号和百分号作为标签
> {% xxx %}

{% endraw %}

例如：判断page.show_sidebar这个bolean值 {% raw %}

```
{% if page.show_sidebar %}
  <div class="sidebar">
    sidebar content
  </div>
{% endif %}
```

{% endraw %}

### filters

{% raw %} 用分隔符|在输出中使用
> xxx \| xxx

例如：将字符串转换为大写

```
{{ "hi" | capitalize }}
```

{% endraw %}

## Data Files 数据文件

> Jekyll 支持从目录中的 YAML、JSON 和 CSV 文件加载数据_data 。数据文件是将内容与源代码分开的好方法，使网站更易于维护。

### 数据文件使用

例如： YAML是 Ruby 生态系统中常见的一种格式。您将使用它来存储一组导航项，每个导航项都有一个名称和链接。

_data/navigation.yml使用以下内容创建导航数据文件：

```
- name: Home
  link: /
- name: About
  link: /about.html
```

Jekyll 在 中向您提供此数据文件site.data.navigation。_includes/navigation.html现在您可以迭代数据文件，而不是输出 中的每个链接：

{% raw %}

```
<nav>
  {% for item in site.data.navigation %}
    <a href="{{ item.link }}" {% if page.url == item.link %}style="color: red;"{% endif %}>
      {{ item.name }}
    </a>
  {% endfor %}
</nav>
```

{% endraw %}

## Blogging 博客相关

### Posts 帖子/文章

博客文章位于名为`_posts` 的文件夹中。

帖子的文件名具有特殊格式：
> {发布日期}-{标题}.{扩展名}

> YYYY-MM-DD-title.markdown

* 文章的标题和日期都在文件名中定义。
* 文章的日期格式为 YYYY-MM-DD。
* 文章的文件名应该是 2008-12-31-my-awesome-post.md。
* 文章的 URL 应该是 /2008/12/31/my-awesome-post/。
* 文章的 URL 可以在 YAML 头部中定义。

### Layout 布局

在文件开头的Front Matter元信息中设置layout属性，指定文章使用的布局。

例如：
> layout: post

layout指向的布局文件放在`_layouts`下的`post.html`

{% raw %}

```html
---
layout: default
---
<h1>{{ page.title }}</h1>
<p>{{ page.date | date_to_string }} - {{ page.author }}</p>

{{ content }}

```

{% endraw %}

### List posts 帖子目录

在根目录创建`blog.html`，并在导航页添加blog链接进去

/blog.html包含以下内容： {% raw %}

```
---
layout: default
title: Blog
---
<h1>Latest Posts</h1>

<ul>
  {% for post in site.posts %}
    <li>
      <h2><a href="{{ post.url }}">{{ post.title }}</a></h2>
      {{ post.excerpt }}
    </li>
  {% endfor %}
</ul>
```

{% endraw %}

* post.url由Jekyll自动设置为post的输出路径
* post.title从post文件名中提取，可以通过设置标题首要问题
* post.excerpt默认情况下是内容的第一段

---

## 扩展阅读

- [Jekyll 语法简单笔记](https://github.tiankonguse.com/blog/2014/11/10/jekyll-study.html)
- [ 一篇文章了解Liquid Template Engine 模版引擎 (Jekyll模版)](https://www.jianshu.com/p/5c6d68bcd836)
